sonar-analysis:
    name: Análise de Código com SonarQube
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Melhora a análise do SonarQube, dando acesso ao histórico completo

      - name: Iniciar SonarQube no servidor remoto
        uses: appleboy/ssh-action@master
        with:
          host: 201.23.3.86 # Seu IP atual
          username: aluno # Seu usuário atual
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Parando e removendo containers antigos do SonarQube..."
            docker stop sonarqube || true # Para o container pelo seu nome
            docker rm --force sonarqube || true # Remove o container de forma forçada
            # Opcional: Se quiser garantir que nenhum dado antigo persista (apaga tudo do SonarQube)
            # CUIDADO: Isso APAGARÁ todos os dados de análise anteriores do SonarQube
            # docker volume rm sonarqube_data || true 
            echo "Iniciando contêiner do SonarQube..."
            docker run -d --name sonarqube -p 8172:9000 sonarqube # Usa seu nome de container e porta
            echo "Aguardando SonarQube iniciar (120 segundos)..."
            sleep 120
            docker ps # Mostra os containers rodando no servidor para depuração

      - name: Instalar e Configurar Sonar Scanner CLI
        run: |
          sudo apt update && sudo apt install -y unzip openjdk-11-jre wget
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          # Adiciona o diretório do scanner ao PATH para que o comando 'sonar-scanner' funcione diretamente
          echo "$GITHUB_WORKSPACE/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Executar Análise SonarQube
        run: |
          sonar-scanner -X \ # Mantém o modo de depuração para logs detalhados
            -Dsonar.projectKey=stars-members-tracker \ # Seu projectKey
            -Dsonar.sources=. \
            -Dsonar.inclusions=**/*.js \
            -Dsonar.host.url=http://201.23.3.86:8172 \ # Sua URL e porta do SonarQube
            -Dsonar.login=admin \
            -Dsonar.password=admin
            # Relembrando: Para maior segurança e evitar problemas de senha alterada, a melhor prática é usar um token:
            # -Dsonar.token=${{ secrets.SONAR_TOKEN }}
            # -Dsonar.sourceEncoding=UTF-8 # Opcional: Define a codificação do código fonte

      - name: Parar e remover container SonarQube
        if: always() # Garante que este passo execute mesmo se a análise falhar
        uses: appleboy/ssh-action@master
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Finalizando e removendo contêiner do SonarQube..."
            docker stop sonarqube || true # Para o container
            docker rm --force sonarqube || true # Remove o container de forma forçada
            sleep 10 # Pequeno delay para o Docker processar