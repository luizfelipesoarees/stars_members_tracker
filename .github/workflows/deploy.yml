name: Deploy Automatizado

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      FRONT_IMAGE: luizfelipesoarees/stars_members_tracker-frontend
      BACK_IMAGE: luizfelipesoarees/stars_members_tracker-backend
      SERVER_IP: 201.23.3.86
      SSH_USER: aluno
      FRONT_PORT: 8171
      BACK_PORT: 8170
      DB_PORT: 8172

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build do backend
        run: docker build -t $BACK_IMAGE ./backend

      - name: Build do frontend
        run: docker build -t $FRONT_IMAGE ./frontend

      - name: Push das imagens para o Docker Hub
        run: |
          docker push $BACK_IMAGE
          docker push $FRONT_IMAGE

      - name: SSH no servidor remoto e rodar SonarQube + deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Parar containers antigos se existirem
            docker rm -f frontend || true
            docker rm -f backend || true
            docker rm -f db || true
            docker rm -f sonarqube || true

            # Subir SonarQube em container temporário
            docker run -d --name sonarqube -p 9000:9000 sonarqube:community
            echo "Aguardando SonarQube iniciar..."
            sleep 60

            # Rodar análise com sonar-scanner (você pode ter um script ou configurar localmente)
            docker run --rm \
              -e SONAR_HOST_URL="http://localhost:9000" \
              -v $(pwd):/usr/src \
              sonarsource/sonar-scanner-cli \
              -Dsonar.projectKey=stars_members_tracker \
              -Dsonar.sources=. \
              -Dsonar.host.url=http://localhost:9000 \
              -Dsonar.login=admin \
              -Dsonar.password=admin

            # Verificar resultado
            if curl -s http://localhost:9000/api/qualitygates/project_status?projectKey=stars_members_tracker | grep -q '"status":"OK"'; then
              echo "Análise aprovada. Continuando com o deploy..."
            else
              echo "Análise reprovada pelo SonarQube. Abortando..."
              docker rm -f sonarqube
              exit 1
            fi

            # Parar e remover SonarQube
            docker rm -f sonarqube

            # Subir containers da aplicação
            docker run -d --name db -e POSTGRES_PASSWORD=123456 -p $DB_PORT:5432 postgres:14-alpine
            sleep 10
            docker run -d --name backend -p $BACK_PORT:8170 $BACK_IMAGE
            docker run -d --name frontend -p $FRONT_PORT:80 $FRONT_IMAGE
