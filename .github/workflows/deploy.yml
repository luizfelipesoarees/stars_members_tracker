name: Deploy STARS Members Tracker

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push
      run: |
        docker-compose build
        docker tag stars_members_tracker_app ${{ secrets.DOCKER_HUB_USERNAME }}/stars-members-tracker:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/stars-members-tracker:latest
        
    - name: SSH and deploy
      uses: appleboy/ssh-action@master
      with:
        host: 201.23.3.86
        username: aluno
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Stop and remove existing containers
          docker stop stars-app || true
          docker rm stars-app || true
          
          # Pull new image
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/stars-members-tracker:latest
          
          # Run SonarQube analysis
          docker run -d --name sonarqube -p 9000:9000 sonarqube
          sleep 120 # Wait for SonarQube to start
          
          # Run analysis (simplified - adjust as needed)
          # This would normally use sonar-scanner
          echo "Simulating SonarQube analysis..."
          
          # Stop SonarQube
          docker stop sonarqube
          docker rm sonarqube
          
          # Deploy new version
          docker run -d \
            --name stars-app \
            --restart always \
            -p 8170:8170 \
            -e DB_HOST=db \
            -e DB_PORT=8175 \
            -e DB_USER=stars_user \
            -e DB_PASS=stars_password \
            -e DB_NAME=stars_db \
            ${{ secrets.DOCKER_HUB_USERNAME }}/stars-members-tracker:latest